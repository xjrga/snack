<?xml version="1.0" encoding="UTF-8"?>
<project name="snack" basedir="." default="info">
    <property name="mainclass" value="io.github.xjrga.snack.gui.Main"/>
    <property name="creator" value="Jorge R. Garcia de Alba"/>
    <property name="package-name" value="snack-1515"/>
    <property name="file-name" value="snack"/>
    <property name="jpda.address" value="5010"/>
    <property name="backup_package" value="snack" />
    <tstamp>
        <format property="timestamp" pattern="yyyy-MM-dd HH:mm:ss"/>
    </tstamp>
    <tstamp>
        <format property="backup_timestamp" pattern="yyyy_MM_dd_HH_mm_ss"/>
    </tstamp>
    <property name="backup_package_compressed" value="${backup_package}_${backup_timestamp}.tgz" />
    <path id="libraries">
        <fileset dir="libraries">
            <include name="**/*.jar"/>
        </fileset>
    </path>
    <!-->info</-->
    <target name="info" depends="">
        <echo>Date: ${timestamp}</echo>
        <echo>Name: ${ant.project.name}</echo>
        <echo>Directory:${basedir}</echo>
        <echo>Java version: ${ant.java.version}</echo>
        <echo>Java classpath: "${java.class.path}</echo>
    </target>
    <!-->Clean project</-->
    <target name="1.clean" depends="">
        <echo>${timestamp}</echo>
        <delete dir="build"/>
        <delete dir="distribution"/>
        <delete dir="docs/html"/>
    </target>
    <!--> Build project </-->
    <target name="2.build" depends="1.clean">
        <echo>${timestamp}</echo>
        <!--> Build main classes </-->
        <mkdir dir="build/main/classes"/>
        <javac release="17" includeantruntime="false" srcdir="source" destdir="build/main/classes" debug="true">
            <classpath refid="libraries"/>
        </javac>
        <!--> Build test classes </-->
        <mkdir dir="build/test/classes"/>
        <mkdir dir="distribution"/>
        <javac release="17" includeAntRuntime="false" srcdir="test" destdir="build/test/classes" debug="true">
            <classpath>
                <path>
                    <fileset dir="libraries">
                        <include name="**/*.jar"/>
                    </fileset>
                </path>
                <pathelement location="build/main/classes"/>
            </classpath>
        </javac>
        <!--> Copy resources </-->
        <mkdir dir="build/main/classes/resources"/>
        <copy todir="build/main/classes/resources">
            <fileset dir="resources">
                <include name="**/*.*"/>
            </fileset>
        </copy>
        <copy todir="build/main/classes">
            <fileset dir=".">
                <include name="**/*.md"/>
            </fileset>
        </copy>
    </target>
    <!-->Create thin application</-->
    <target name="5.create-thin-application" depends="1.clean,2.build">
        <echo>${timestamp}</echo>
        <manifestclasspath property="manifest-classpath" jarfile="${file-name}.jar">
            <classpath refid="libraries"/>
        </manifestclasspath>
        <jar destfile="distribution/${package-name}/${file-name}.jar" basedir="build/main/classes" excludes="">
            <manifest>
                <attribute name="Created-By" value="${creator}"/>
                <attribute name="Main-Class" value="${mainclass}"/>
                <attribute name="Class-Path" value="${manifest-classpath}"/>
            </manifest>
        </jar>
        <copy todir="distribution/${package-name}/libraries">
            <fileset dir="libraries">
                <include name="**/*.jar"/>
            </fileset>
        </copy>
        <copy todir="distribution/${package-name}/config">
            <fileset dir="config">
                <include name="**/*.*"/>
            </fileset>
        </copy>
        <copy todir="distribution/${package-name}/database">
            <fileset dir="database">
                <include name="**/*.*"/>
            </fileset>
        </copy>
        <copy todir="distribution/${package-name}/models">
            <fileset dir="models">
                <include name="**/*.*"/>
            </fileset>
        </copy>       
        <zip destfile="distribution/${package-name}.zip" basedir="distribution" includes="${package-name}/**"/>
        <delete dir="distribution/${package-name}"/>
        <unzip dest="distribution" overwrite="true" src="distribution/${package-name}.zip"/>
        <move todir="distribution/${package-name}" overwrite="true">
            <fileset dir="distribution/${package-name}"/>
        </move>
    </target>
    <!-->Create fat application</-->
    <target name="4.create-fat-application" depends="1.clean,2.build">
        <echo>${timestamp}</echo>
        <unzip dest="build/main/classes" overwrite="true">
            <fileset dir="libraries">
                <include name="**/*.jar"/>
            </fileset>
        </unzip>
        <manifestclasspath property="manifest-classpath" jarfile="build/${file-name}.jar">
            <classpath refid="libraries"/>
        </manifestclasspath>
        <jar destfile="distribution/${package-name}/${file-name}.jar" basedir="build/main/classes" excludes="">
            <manifest>
                <attribute name="Created-By" value="${creator}"/>
                <attribute name="Main-Class" value="${mainclass}"/>
                <attribute name="Class-Path" value="${manifest-classpath}"/>
            </manifest>
        </jar>
        <copy todir="distribution/${package-name}/config">
            <fileset dir="config">
                <include name="**/*.*"/>
            </fileset>
        </copy>
        <copy todir="distribution/${package-name}/database">
            <fileset dir="database">
                <include name="**/*.*"/>
            </fileset>
        </copy>
        <copy todir="distribution/${package-name}/models">
            <fileset dir="models">
                <include name="**/*.*"/>
            </fileset>
        </copy>
        <zip destfile="distribution/${package-name}.zip" basedir="distribution" includes="${package-name}/**"/>
        <delete dir="distribution/${package-name}"/>
        <unzip dest="distribution" overwrite="true" src="distribution/${package-name}.zip"/>
        <move todir="distribution/${package-name}" overwrite="true">
            <fileset dir="distribution/${package-name}"/>
        </move>
    </target>
    <!-->Run classes</-->
    <target name="3.run-class" depends="">
        <echo>${timestamp}</echo>
        <java classname="${mainclass}" fork="true" failonerror="true">
            <classpath>
                <path>
                    <fileset dir="libraries">
                        <include name="**/*.jar"/>
                    </fileset>
                </path>
                <pathelement location="build/main/classes"/>
            </classpath>
        </java>
    </target>
    <!-->Generate javadoc</-->
    <target name="generate-javadoc" depends="">
        <javadoc destdir="docs/html" author="true" version="true" use="true">
            <fileset dir="source" defaultexcludes="yes">
                <include name="io/github/xjrga/**"/>
                <!--<exclude name="io/github/xjrga/MyTest*"/>-->
            </fileset>
            <classpath>
                <path>
                    <fileset dir="libraries">
                        <include name="**/*.jar"/>
                    </fileset>
                </path>
                <pathelement location="build/main/classes"/>
            </classpath>
        </javadoc>
    </target>
    <target name="sign">
        <exec executable="gpg">
            <arg line="--output"/>
            <arg line="distribution/${package-name}.zip.asc"/>
            <arg line="--detach-sig"/>
            <arg line="distribution/${package-name}.zip"/>
        </exec>
    </target>
    <target name="verify">
        <exec executable="gpg">
            <arg line="--verify"/>
            <arg line="distribution/${package-name}.zip.asc"/>
            <arg line="distribution/${package-name}.zip"/>
        </exec>
    </target>
    <!-->Run fat application</-->
    <target name="6.run-jar" depends="">
        <echo>${timestamp}</echo>
        <java jar="distribution/${package-name}/${file-name}.jar" fork="true" dir="distribution/${package-name}" failonerror="false" maxmemory="2g"/>
    </target>
    <!-->create-directory-structure</-->
    <target name="create-directory-structure" depends="">
        <echo>${timestamp}</echo>        
        <mkdir dir="build/main/classes"/>
        <mkdir dir="build/main/classes/resources"/>
        <mkdir dir="build/test/classes"/>
        <mkdir dir="build/test/data"/>
        <mkdir dir="build/test/classes/resources"/>        
        <mkdir dir="database/scripts/sql"/>
        <mkdir dir="distribution"/>
        <mkdir dir="docs/html"/>
        <mkdir dir="libraries"/>
        <mkdir dir="resources"/>
        <mkdir dir="test"/>
        <mkdir dir="source"/>
    </target>
    <!--> Run Tests </-->
    <target name="test" depends="1.clean,2.build">
        <junit printsummary="true" fork="true" dir=".">
            <classpath>
                <path>
                    <fileset dir="libraries">
                        <include name="**/*.jar"/>
                    </fileset>
                </path>
                <pathelement location="build/main/classes"/>
                <pathelement location="build/test/classes"/>
            </classpath>
            <formatter type="plain" usefile="false"/>
            <batchtest todir="build/test/data">
                <fileset dir="build/test/classes"/>
            </batchtest>
        </junit>
    </target>    
    <!-- make project backup -->
    <target name="backup" depends="1.clean">
        <echo>
            Backup files to ${backup_package_compressed}
        </echo>
        <exec executable="tar">
            <arg line="czfv" />
            <arg line="../../backups/${backup_package_compressed}" />
            <arg line="." />
        </exec>
    </target>
    <!--    <property name="jpda.address" value="5010"/>-->
    <!-->debug fat application</-->
    <!--    <target name="debug-application" depends="">
        <echo>${timestamp}</echo>
        <java jar="distribution/${package-name}/${file-name}.jar" fork="true" dir="distribution/${package-name}" failonerror="false" maxmemory="2g">
            <arg line="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"/>
            <jvmarg value="-agentlib:jdwp=transport=dt_socket,address=${jpda.address}"/>
        </java>
        <exec executable="jdb">
            <arg line="-sourcepath source -classpath build/main/classes:libraries io.github.xjrga.snack.gui.Main"/>
        </exec>
    </target>-->    
</project>
