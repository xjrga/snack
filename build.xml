<?xml version="1.0" encoding="UTF-8"?>
<project name="snack" basedir="." default="">
  <property name="mainclass" value="io.github.xjrga.snack.gui.Main"/>
  <property name="creator" value="Jorge R. Garcia de Alba"/>
  <property name="package-name" value="snack-1530"/>
  <property name="file-name" value="snack"/>
  <property name="jpda.address" value="5010"/>
  <property name="backup_package" value="snack"/>
  <property name="site" value="/opt/Projects/IMPORTANT/xjrga.github.io/docs/releases/"/>
  <tstamp>
    <format property="timestamp" pattern="yyyy-MM-dd HH:mm:ss"/>
  </tstamp>
  <tstamp>
    <format property="backup_timestamp" pattern="yyyy_MM_dd_HH_mm_ss"/>
  </tstamp>
  <property name="backup_package_compressed" value="${backup_package}_${backup_timestamp}.tgz"/>
  <path id="libraries">
    <fileset dir="libraries">
      <include name="**/*.jar"/>
    </fileset>
  </path>
  <path id="libraries">
    <fileset dir="libraries">
      <include name="**/*.jar"/>
    </fileset>
  </path>
  <target name="application-clean" depends="">
    <echo>${timestamp}</echo>
    <delete dir="distribution"/>
  </target>
  <!-->Create thin application</-->
  <target name="application-thin" depends="application-clean">
    <echo>${timestamp}</echo>
    <manifestclasspath property="manifest-classpath" jarfile="${file-name}.jar">
      <classpath refid="libraries"/>
    </manifestclasspath>
    <jar destfile="distribution/${package-name}/${file-name}.jar" basedir="build/main/classes" excludes="">
      <manifest>
        <attribute name="Created-By" value="${creator}"/>
        <attribute name="Main-Class" value="${mainclass}"/>
        <attribute name="Class-Path" value="${manifest-classpath}"/>
      </manifest>
    </jar>
    <copy todir="distribution/${package-name}/libraries">
      <fileset dir="libraries">
        <include name="**/*.jar"/>
      </fileset>
    </copy>
    <copy todir="distribution/${package-name}/config">
      <fileset dir="config">
        <include name="**/*.*"/>
      </fileset>
    </copy>
    <copy todir="distribution/${package-name}/database">
      <fileset dir="database">
        <include name="**/*.*"/>
      </fileset>
    </copy>
    <copy todir="distribution/${package-name}/models">
      <fileset dir="models">
        <include name="**/*.*"/>
      </fileset>
    </copy>
  </target>
  <!-->Create fat application</-->
  <target name="application-fat" depends="application-clean">
    <echo>${timestamp}</echo>
    <unzip dest="build/main/classes" overwrite="true">
      <fileset dir="libraries">
        <include name="**/*.jar"/>
      </fileset>
    </unzip>
    <manifestclasspath property="manifest-classpath" jarfile="build/${file-name}.jar">
      <classpath refid="libraries"/>
    </manifestclasspath>
    <jar destfile="distribution/${package-name}/${file-name}.jar" basedir="build/main/classes" excludes="">
      <manifest>
        <attribute name="Created-By" value="${creator}"/>
        <attribute name="Main-Class" value="${mainclass}"/>
        <attribute name="Class-Path" value="${manifest-classpath}"/>
      </manifest>
    </jar>
    <copy todir="distribution/${package-name}/config">
      <fileset dir="config">
        <include name="**/*.*"/>
      </fileset>
    </copy>
    <copy todir="distribution/${package-name}/database">
      <fileset dir="database">
        <include name="**/*.*"/>
      </fileset>
    </copy>
    <copy todir="distribution/${package-name}/models">
      <fileset dir="models">
        <include name="**/*.*"/>
      </fileset>
    </copy>
  </target>
  <target name="application-zip">
    <zip destfile="distribution/${package-name}.zip" basedir="distribution" includes="${package-name}/**"/>
  </target>
  <target name="zipped-application-sign">
    <exec executable="gpg">
      <arg line="--output"/>
      <arg line="distribution/${package-name}.zip.asc"/>
      <arg line="--detach-sig"/>
      <arg line="distribution/${package-name}.zip"/>
    </exec>
  </target>
  <target name="zipped-application-verify">
    <exec executable="gpg">
      <arg line="--verify"/>
      <arg line="distribution/${package-name}.zip.asc"/>
      <arg line="distribution/${package-name}.zip"/>
    </exec>
  </target>
  <target name="application-run" depends="">
    <echo>${timestamp}</echo>
    <java jar="distribution/${package-name}/${file-name}.jar" fork="true" dir="distribution/${package-name}" failonerror="false" maxmemory="2g"/>
  </target>
  <target name="application-debug" depends="">
    <echo>${timestamp}</echo>
    <java jar="distribution/${package-name}/${file-name}.jar" fork="true" dir="distribution/${package-name}" failonerror="false" maxmemory="2g">
      <arg line="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"/>
      <jvmarg value="-agentlib:jdwp=transport=dt_socket,address=${jpda.address}"/>
    </java>
    <exec executable="jdb">
      <arg line="-sourcepath source -classpath build/main/classes:libraries io.github.xjrga.snack.gui.Main"/>
    </exec>
  </target>
  <target name="source-clean" depends="">
    <echo>${timestamp}</echo>
    <delete dir="build"/>
  </target>
  <target name="source-build" depends="source-clean">
    <echo>${timestamp}</echo>
    <!--> Build main classes </-->
    <mkdir dir="build/main/classes"/>
    <javac release="17" includeantruntime="false" srcdir="source" destdir="build/main/classes" debug="true">
      <classpath refid="libraries"/>
    </javac>
    <!--> Build test classes </-->
    <mkdir dir="build/test/classes"/>
    <mkdir dir="distribution"/>
    <javac release="17" includeAntRuntime="false" srcdir="test" destdir="build/test/classes" debug="true">
      <classpath>
        <path>
          <fileset dir="libraries">
            <include name="**/*.jar"/>
          </fileset>
        </path>
        <pathelement location="build/main/classes"/>
      </classpath>
    </javac>
    <!--> Copy resources </-->
    <mkdir dir="build/main/classes/resources"/>
    <copy todir="build/main/classes/resources">
      <fileset dir="resources">
        <include name="**/*.*"/>
      </fileset>
    </copy>
    <copy todir="build/main/classes">
      <fileset dir=".">
        <include name="**/*.md"/>
      </fileset>
    </copy>
  </target>
  <target name="source-run" depends="">
    <echo>${timestamp}</echo>
    <java classname="${mainclass}" fork="true" failonerror="true">
      <classpath>
        <path>
          <fileset dir="libraries">
            <include name="**/*.jar"/>
          </fileset>
        </path>
        <pathelement location="build/main/classes"/>
      </classpath>
    </java>
  </target>
  <target name="source-info" depends="">
    <echo>Date: ${timestamp}</echo>
    <echo>Name: ${ant.project.name}</echo>
    <echo>Directory:${basedir}</echo>
    <echo>Java version: ${ant.java.version}</echo>
    <echo>Java classpath: "${java.class.path}</echo>
  </target>
  <target name="source-backup" depends="source-clean">
    <echo>Backup files to ${backup_package_compressed}</echo>
    <exec executable="tar">
      <arg line="czfv"/>
      <arg line="../../backups/${backup_package_compressed}"/>
      <arg line="."/>
    </exec>
  </target>
  <target name="source-javadoc" depends="">
    <javadoc destdir="docs/html" author="true" version="true" use="true">
      <fileset dir="source" defaultexcludes="yes">
        <include name="io/github/xjrga/**"/>
        <!--<exclude name="io/github/xjrga/MyTest*"/>-->
      </fileset>
      <classpath>
        <path>
          <fileset dir="libraries">
            <include name="**/*.jar"/>
          </fileset>
        </path>
        <pathelement location="build/main/classes"/>
      </classpath>
    </javadoc>
  </target>
  <target name="source-test" depends="source-clean,source-build">
    <junit printsummary="true" fork="true" dir=".">
      <classpath>
        <path>
          <fileset dir="libraries">
            <include name="**/*.jar"/>
          </fileset>
        </path>
        <pathelement location="build/main/classes"/>
        <pathelement location="build/test/classes"/>
      </classpath>
      <formatter type="plain" usefile="false"/>
      <batchtest todir="build/test/data">
        <fileset dir="build/test/classes"/>
      </batchtest>
    </junit>
  </target>
  <target name="zipped-application-site" depends="">
    <echo>${timestamp}</echo>
    <copy file="distribution/${package-name}.zip" todir="${site}" overwrite="true"/>
    <copy file="distribution/${package-name}.zip.asc" todir="${site}" overwrite="true"/>
  </target>
  <target name="all" depends="source-build,application-thin,application-run,application-zip,zipped-application-sign,zipped-application-verify,zipped-application-site">
    <echo>${timestamp}</echo>
  </target>
</project>
